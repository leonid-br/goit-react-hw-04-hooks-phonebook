{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Notification/Notification.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Heading/Heading.js","components/Notification/Notification.js","components/App.js","index.js","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handelChange","e","currentTarget","value","preventDefault","className","style","form","lable","type","onChange","pattern","title","required","input","button","Filter","label","ContactItem","id","onDelete","item","onClick","porpTypes","contactsArr","PropTypes","array","isRequired","ContactList","deleteContact","list","map","el","Container","children","container","Heading","Notification","notification","App","key","defValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","normalizeName","toLowerCase","checkedName","find","newContact","shortid","generate","alert","toUpperCase","prevState","length","normalizeFilter","findContact","contact","includes","idContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,uCCAjCD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,2ICkEnHC,EA/DK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAED,SAATP,GACAC,EAAQM,GAEC,WAATP,GACAG,EAAUI,IAYlB,OACI,uBAAMT,SATW,SAAAO,GACjBA,EAAEG,iBAEFV,EAASE,EAAME,GACfD,EAAQ,IACRE,EAAU,KAIoBM,UAAWC,IAAMC,KAA/C,UACI,wBAAOF,UAAWC,IAAME,MAAxB,iBAEI,uBACIC,KAAK,OACLb,KAAK,OACLO,MAAOP,EACPc,SAAUV,EACVW,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,UAAWC,IAAMQ,WAIzB,wBAAOT,UAAWC,IAAME,MAAxB,mBAEI,uBACIC,KAAK,MACLb,KAAK,SACLO,MAAOL,EACPY,SAAUV,EACVW,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,UAAWC,IAAMQ,WAIzB,wBAAQL,KAAK,SAASJ,UAAWC,IAAMS,OAAvC,6B,gBCnCGC,EAnBA,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAOO,EAAe,EAAfA,SACrB,OACI,wBAAOL,UAAWC,IAAMW,MAAxB,kCAEI,uBACIR,KAAK,OACLN,MAAOA,EACPO,SAAUA,EACVL,UAAWC,IAAMQ,Y,iCCUlBI,EAlBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIvB,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,OAAQsB,EAAe,EAAfA,SACrC,OACI,qBAAaf,UAAWC,IAAMe,KAA9B,UACI,+BAAOzB,IADX,IACwB,sBAAMS,UAAWC,IAAMR,OAAvB,SAAgCA,IACpD,wBAAQW,KAAK,SAASa,QAASF,EAAUf,UAAWC,IAAMS,OAA1D,sBAFKI,I,iBCcjBD,EAAYK,UAAY,CACpBC,YAAaC,IAAUC,MAAMC,YAElBC,MAlBK,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,YAAaK,EAAoB,EAApBA,cAChC,OACI,oBAAIxB,UAAWC,IAAMwB,KAArB,SACKN,EAAYO,KAAI,SAAAC,GAAE,OACf,cAAC,EAAD,CAEIpC,KAAMoC,EAAGpC,KACTE,OAAQkC,EAAGlC,OACXsB,SAAU,kBAAMS,EAAcG,EAAGb,MAH5Ba,EAAGb,U,iBCEbc,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAK7B,UAAWC,IAAM6B,UAAtB,SAAkCD,K,iBCKvBE,EANC,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAH,OACZ,oBAAIP,UAAWC,IAAMM,MAArB,SAA6BA,K,QCElByB,EAJM,kBACjB,mBAAGhC,UAAWiC,eAAd,uCC6FWC,EA3EH,WACR,MAboB,SAACC,EAAKC,GAC1B,MAA0B9C,oBACtB,kCAAM+C,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA7C,QAAsDC,KAD1D,mBAAOM,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACNL,OAAOC,aAAaK,QAAQV,EAAKE,KAAKS,UAAUJ,MACjD,CAACP,EAAKO,IAEF,CAACA,EAAOC,GAIiBI,CAAgB,WAAY,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,EAA4B3D,mBAAS,IAArC,mBAAO4D,EAAP,KAAeC,EAAf,KAgDA,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAS5C,MAAO,cAChB,cAAC,EAAD,CAAalB,SA7CF,SAACE,EAAME,GACtB,IAAM2D,EAAgB7D,EAAK8D,cACrBC,EAAcN,EAASO,MACzB,gBAAGhE,EAAH,EAAGA,KAAH,OAAc6D,IAAkB7D,EAAK8D,iBAGnCG,EAAa,CACf1C,GAAI2C,IAAQC,WACZnE,OACAE,UAGJ,GAAI6D,EACA,OAAOK,MAAM,iBAAD,OACSpE,EAAKqE,cADd,+CAKhBX,GAAY,SAAAY,GAAS,OAAKL,GAAL,mBAAoBK,UA4BrC,cAAC,EAAD,CAAStD,MAAO,aACfyC,EAASc,QAAU,GAChB,cAAC,EAAD,CAAQhE,MAAOoD,EAAQ7C,SA3Bd,SAAAT,GACjBuD,EAAUvD,EAAEC,cAAcC,UA6BrBkD,EAASc,OAAS,EACf,cAAC,EAAD,CACI3C,YA5BI,WAChB,IAAM4C,EAAkBb,EAAOG,cAEzBW,EAAchB,EAASE,QAAO,SAAAe,GAAO,OACvCA,EAAQ1E,KAAK8D,cAAca,SAASH,MAOxC,OAJ2B,IAAvBC,EAAYF,QACZH,MAAM,cAAD,OAAeI,EAAgBH,gBAGjCI,EAiBkBA,GACbxC,cAhBC,SAAA2C,GACblB,EAAYD,EAASE,QAAO,qBAAGpC,KAAgBqD,SAkBvC,cAAC,EAAD,QCrFhBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BtF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,8B,kBCAjGD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.f795d264.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2hw8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Oob80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__3pGvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2eECg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2yWYE\",\"lable\":\"ContactForm_lable__1b2y4\",\"input\":\"ContactForm_input__3Qy8c\",\"button\":\"ContactForm_button__3ELZ6\"};","import { useState } from 'react';\nimport style from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handelChange = e => {\n        const { name, value } = e.currentTarget;\n\n        if (name === 'name') {\n            setName(value);\n        }\n        if (name === 'number') {\n            setNumber(value);\n        }\n    };\n\n    const handelSubmit = e => {\n        e.preventDefault();\n\n        onSubmit(name, number);\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handelSubmit} className={style.form}>\n            <label className={style.lable}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handelChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <label className={style.lable}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handelChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <button type=\"submit\" className={style.button}>\n                Add contact\n            </button>\n        </form>\n    );\n};\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={style.label}>\n            Find contacts by name\n            <input\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n                className={style.input}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDelete }) => {\n    return (\n        <li key={id} className={style.item}>\n            <span>{name}</span>:<span className={style.number}>{number}</span>\n            <button type=\"submit\" onClick={onDelete} className={style.button}>\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contactsArr, deleteContact }) => {\n    return (\n        <ul className={style.list}>\n            {contactsArr.map(el => (\n                <ContactItem\n                    key={el.id}\n                    name={el.name}\n                    number={el.number}\n                    onDelete={() => deleteContact(el.id)}\n                />\n            ))}\n        </ul>\n    );\n};\n\nContactItem.porpTypes = {\n    contactsArr: PropTypes.array.isRequired,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={style.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport style from './Heading.module.css';\n\nconst Heading = ({ title }) => (\n    <h2 className={style.title}>{title}</h2>\n);\n\nHeading.propTypes = { title: PropTypes.string.isRequired };\n\nexport default Heading;\n","import { notification } from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n    <p className={notification}>Enter your first contact</p>\r\n);\r\n\r\nexport default Notification;\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Heading from './Heading';\nimport Notification from './Notification';\n\nconst useLocalStorage = (key, defValue) => {\n    const [state, setState] = useState(\n        () => JSON.parse(window.localStorage.getItem(key)) ?? defValue,\n    );\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, setState];\n};\n\nconst App = () => {\n    const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n    // const [contacts, setContacts] = useState(\n    //     () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n    // );\n    const [filter, setFilter] = useState('');\n\n    // useEffect(() => {\n    //     window.localStorage.setItem('contacts', JSON.stringify(contacts));\n    // }, [contacts]);\n\n    const addContact = (name, number) => {\n        const normalizeName = name.toLowerCase();\n        const checkedName = contacts.find(\n            ({ name }) => normalizeName === name.toLowerCase(),\n        );\n\n        const newContact = {\n            id: shortid.generate(),\n            name,\n            number,\n        };\n\n        if (checkedName) {\n            return alert(\n                `This contact \"${name.toUpperCase()}\" has already been added to your Phonebook`,\n            );\n        }\n\n        setContacts(prevState => [newContact, ...prevState]);\n    };\n\n    const changeFilter = e => {\n        setFilter(e.currentTarget.value);\n    };\n\n    const findContact = () => {\n        const normalizeFilter = filter.toLowerCase();\n\n        const findContact = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizeFilter),\n        );\n\n        if (findContact.length === 0) {\n            alert(`No contact ${normalizeFilter.toUpperCase()}`);\n        }\n\n        return findContact;\n    };\n    const onDelete = idContact => {\n        setContacts(contacts.filter(({ id }) => id !== idContact));\n    };\n\n    return (\n        <Container>\n            <Heading title={'Phonebook'} />\n            <ContactForm onSubmit={addContact} />\n            <Heading title={'Contacts'} />\n            {contacts.length >= 2 && (\n                <Filter value={filter} onChange={changeFilter} />\n            )}\n\n            {contacts.length > 0 ? (\n                <ContactList\n                    contactsArr={findContact()}\n                    deleteContact={onDelete}\n                />\n            ) : (\n                <Notification />\n            )}\n        </Container>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3M0Uu\",\"button\":\"ContactItem_button__3IHu8\",\"number\":\"ContactItem_number__2DSg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23KF-\",\"input\":\"Filter_input__4EZPK\"};"],"sourceRoot":""}